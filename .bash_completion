_AI()
{
    local cur
    cur=${COMP_WORDS[COMP_CWORD]}

    COMPREPLY=( $( apt-cache --no-generate pkgnames "$cur" 2> /dev/null ) )
    return 0
}
complete -F _AI ai

_AIV()
{
    local cur
    cur=${COMP_WORDS[COMP_CWORD]}

    COMPREPLY=( $( apt-cache --no-generate pkgnames "$cur" 2> /dev/null ) )
    return 0
}
complete -F _AIV aiv

_AQ()
{
    local cur
    cur=${COMP_WORDS[COMP_CWORD]}

    COMPREPLY=( $( apt-cache --no-generate pkgnames "$cur" 2> /dev/null ) )
    return 0
}
complete -F _AQ aq

_AG()
{
    local cur
    cur=${COMP_WORDS[COMP_CWORD]}

    COMPREPLY=( $( apt-cache --no-generate pkgnames "$cur" 2> /dev/null ) )
    return 0
}
complete -F _AG ag

_AQG()
{
    local cur
    cur=${COMP_WORDS[COMP_CWORD]}

    COMPREPLY=( $( apt-cache --no-generate pkgnames "$cur" 2> /dev/null ) )
    return 0
}
complete -F _AQ aqg

_AUN()
{
    local cur
    cur=${COMP_WORDS[COMP_CWORD]}

    COMPREPLY=( $( dpkg --get-selections  | grep -v deinstall | awk {' print $1 '} "$cur" 2> /dev/null ) )
    return 0
}
complete -F _AQ aun

_PSQ()
{
    local cur
    cur=${COMP_WORDS[COMP_CWORD]}
    processes=$( ps -A | awk '{print $NF}' | grep -v '\/' | sort | uniq | sed ':a;N;$!ba;s/\n/\ /g' )
    COMPREPLY=( $(compgen -W "$processes" -- "$cur" ) )
    return 0
}
complete -F _PSQ psgrep

_CSCAN()
{
    #~/.cipherscan/hosts.log
    local cur
    cur=${COMP_WORDS[COMP_CWORD]}
    hosts=$( cat $HOME/.cipherscan/hosts.log | grep "\." | sed ':a;N;$!ba;s/\n/\ /g' )
    COMPREPLY=( $(compgen -W "$hosts" -- "$cur" ) )
    return 0
}
complete -F _CSCAN cs
complete -F _CSCAN cipherscan

_CQ()
{
    local cur
    cur=${COMP_WORDS[COMP_CWORD]}
    local cterm
    cterm="3DES AES AES128 AES256 AESGCM ALL aRSA CAMELLIA CAMELLIA128 CAMELLIA256 CHACHA20 DES EDH EECDH EXPORT FIPS HIGH kEDH kEECDH kRSA LOW MD5 MEDIUM SRP RC2 RC4 RSA SEED SHA SHA1 SHA256 SHA384 SSLv2 SSLv3 TLSv1 TLSv1.2"
    COMPREPLY=( $(compgen -W "$cterm" -- "$cur" ) )
    return 0
}
complete -F _CQ cq

_CQN()
{
    local cur
    cur=${COMP_WORDS[COMP_CWORD]}
    local cterm
    cterm="3DES ADH aDSS AECDH aECDSA AES AES128 AES256 AESGCM ALL aRSA CAMELLIA CAMELLIA128 CAMELLIA256 CHACHA20 COMPLEMENTOFALL DES DH DSS ECDH ECDSA EDH EECDH EXPORT FIPS HIGH kEDH kEECDH kRSA LOW MD5 MEDIUM NULL PSK SRP RC2 RC4 RSA SEED SHA SHA1 SHA256 SHA384 SSLv2 SSLv3 TLSv1 TLSv1.2"
    COMPREPLY=( $(compgen -W "$cterm" -- "$cur" ) )
    return 0
}
complete -F _CQN cqn

_DROPBOX()
{
    local cur
    cur=${COMP_WORDS[COMP_CWORD]}
    local cterm
    cterm="status throttle help puburl stop running start filestatus ls autostart exclude lansync sharelink proxy"
    COMPREPLY=( $(compgen -W "$cterm" -- "$cur" ) )
    return 0
}
complete -F _DROPBOX dropbox

_VAGRANT()
{
    local cur
    cur=${COMP_WORDS[COMP_CWORD]}
    local cterm
	cterm="box connect destroy docker-logs docker-run global-status halt help init list-commands login package plugin provision push rdp reload resume rsync rsync-auto share ssh ssh-config status suspend up version"
    COMPREPLY=( $(compgen -W "$cterm" -- "$cur" ) )
    return 0
}
complete -F _VAGRANT vagrant


_BITBUCKET()
{
    local cur
    cur=${COMP_WORDS[COMP_CWORD]}
    local cterm
	cterm="create update delete clone create_from_local pull_request pull download list privilege group-privilege add_remote"
    COMPREPLY=( $(compgen -W "$cterm" -- "$cur" ) )
    return 0
}
complete -F _BITBUCKET bitbucket
complete -F _BITBUCKET bb

_GRM()
{
    local cur
    cur=${COMP_WORDS[COMP_CWORD]}
    local cterm
	cterm=$(git branch --no-color 2> /dev/null | sed 's/*/ /g' 2> /dev/null )
    COMPREPLY=( $(compgen -W "$cterm" -- "$cur" ) )
    return 0
}
complete -F _GRM grm
